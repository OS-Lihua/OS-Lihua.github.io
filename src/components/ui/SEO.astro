---
interface Props {
  title?: string;
  description?: string;
  image?: string;
  url?: string;
  type?: 'website' | 'article' | 'profile';
  author?: string;
  publishedTime?: string;
  modifiedTime?: string;
  tags?: string[];
  canonical?: string;
  noindex?: boolean;
  nofollow?: boolean;
}

const {
  title = 'YaCo - Crypto & AI Developer',
  description = 'YaCo的个人网站，专注于加密货币和人工智能开发，分享技术博客和项目展示。',
  image = '/images/yaco.png',
  url = Astro.url.href,
  type = 'website',
  author = 'YaCo',
  publishedTime,
  modifiedTime,
  tags = [],
  canonical = Astro.url.href,
  noindex = false,
  nofollow = false
} = Astro.props;

const siteUrl = 'https://www.yaco.email';
const fullImageUrl = image.startsWith('http') ? image : `${siteUrl}${image}`;
const fullUrl = url.startsWith('http') ? url : `${siteUrl}${url}`;
const fullCanonical = canonical.startsWith('http') ? canonical : `${siteUrl}${canonical}`;

// 生成结构化数据
const structuredData = {
  '@context': 'https://schema.org',
  '@type': type === 'article' ? 'BlogPosting' : 'WebSite',
  name: title,
  description: description,
  url: fullUrl,
  image: fullImageUrl,
  author: {
    '@type': 'Person',
    name: author,
    url: siteUrl
  },
  publisher: {
    '@type': 'Organization',
    name: 'YaCo',
    url: siteUrl,
    logo: {
      '@type': 'ImageObject',
      url: `${siteUrl}/images/logo.png`
    }
  },
  ...(publishedTime && { datePublished: publishedTime }),
  ...(modifiedTime && { dateModified: modifiedTime }),
  ...(tags.length > 0 && { keywords: tags.join(', ') })
};
---

<!-- 基础 SEO -->
<title>{title}</title>
<meta name="description" content={description} />
<meta name="author" content={author} />
<link rel="canonical" href={fullCanonical} />

<!-- Robots 指令 -->
<meta name="robots" content={`${noindex ? 'noindex' : 'index'},${nofollow ? 'nofollow' : 'follow'}`} />

<!-- Open Graph -->
<meta property="og:type" content={type} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={fullImageUrl} />
<meta property="og:url" content={fullUrl} />
<meta property="og:site_name" content="YaCo" />
<meta property="og:locale" content="zh_CN" />

<!-- Twitter Card -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={fullImageUrl} />
<meta name="twitter:creator" content="@yaco_dev" />

<!-- 文章特定的 meta 标签 -->
{type === 'article' && publishedTime && (
  <meta property="article:published_time" content={publishedTime} />
)}
{type === 'article' && modifiedTime && (
  <meta property="article:modified_time" content={modifiedTime} />
)}
{type === 'article' && author && (
  <meta property="article:author" content={author} />
)}
{type === 'article' && tags.map(tag => (
  <meta property="article:tag" content={tag} />
))}

<!-- 结构化数据 -->
<script type="application/ld+json" set:html={JSON.stringify(structuredData)} />

<!-- 额外的 SEO 优化 -->
<meta name="theme-color" content="#0dbc82" />
<meta name="msapplication-TileColor" content="#0dbc82" />
<meta name="apple-mobile-web-app-capable" content="yes" />
<meta name="apple-mobile-web-app-status-bar-style" content="default" />

<!-- 语言和地区 -->
<meta name="language" content="zh-CN" />
<meta name="geo.region" content="CN" />

<!-- 版权信息 -->
<meta name="copyright" content="© 2024 YaCo. All rights reserved." />

<!-- 网站验证（如果需要） -->
<!-- <meta name="google-site-verification" content="your-verification-code" /> -->
<!-- <meta name="baidu-site-verification" content="your-verification-code" /> -->

<!-- 预加载关键资源 -->
<link rel="preload" href="/fonts/montserrat.woff2" as="font" type="font/woff2" crossorigin />

<!-- 安全头 -->
<meta http-equiv="X-Content-Type-Options" content="nosniff" />
<meta http-equiv="X-Frame-Options" content="DENY" />
<meta http-equiv="X-XSS-Protection" content="1; mode=block" />

<!-- 性能提示 -->
<meta http-equiv="Accept-CH" content="DPR, Viewport-Width, Width" />
