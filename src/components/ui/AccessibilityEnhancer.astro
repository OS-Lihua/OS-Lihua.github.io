---
// 可访问性增强组件
interface Props {
  enableSkipLinks?: boolean;
  enableFocusManagement?: boolean;
  enableKeyboardNavigation?: boolean;
  enableScreenReaderSupport?: boolean;
}

const {
  enableSkipLinks = true,
  enableFocusManagement = true,
  enableKeyboardNavigation = true,
  enableScreenReaderSupport = true
} = Astro.props;
---

<!-- 跳转链接 -->
{enableSkipLinks && (
  <div class="skip-links">
    <a href="#main-content" class="skip-link">跳转到主要内容</a>
    <a href="#navigation" class="skip-link">跳转到导航</a>
    <a href="#footer" class="skip-link">跳转到页脚</a>
  </div>
)}

<!-- 屏幕阅读器支持 -->
{enableScreenReaderSupport && (
  <div aria-live="polite" aria-atomic="true" class="sr-only" id="screen-reader-announcements"></div>
)}

<script is:inline define:vars={{ enableFocusManagement, enableKeyboardNavigation, enableScreenReaderSupport }}>
  // 焦点管理
  if (enableFocusManagement) {
    // 确保焦点可见
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Tab') {
        document.body.classList.add('keyboard-navigation');
      }
    });

    document.addEventListener('mousedown', () => {
      document.body.classList.remove('keyboard-navigation');
    });

    // 焦点陷阱（用于模态框等）
    window.trapFocus = function(element) {
      const focusableElements = element.querySelectorAll(
        'a[href], button, textarea, input[type="text"], input[type="radio"], input[type="checkbox"], select'
      );
      const firstFocusableElement = focusableElements[0];
      const lastFocusableElement = focusableElements[focusableElements.length - 1];

      element.addEventListener('keydown', (e) => {
        if (e.key === 'Tab') {
          if (e.shiftKey) {
            if (document.activeElement === firstFocusableElement) {
              lastFocusableElement.focus();
              e.preventDefault();
            }
          } else {
            if (document.activeElement === lastFocusableElement) {
              firstFocusableElement.focus();
              e.preventDefault();
            }
          }
        }
        if (e.key === 'Escape') {
          element.style.display = 'none';
          // 返回焦点到触发元素
          if (element.dataset.returnFocus) {
            document.getElementById(element.dataset.returnFocus)?.focus();
          }
        }
      });
    };
  }

  // 键盘导航增强
  if (enableKeyboardNavigation) {
    // 为所有交互元素添加键盘支持
    document.addEventListener('keydown', (e) => {
      const target = e.target;
      
      // 空格键激活按钮
      if (e.key === ' ' && target.tagName === 'BUTTON') {
        e.preventDefault();
        target.click();
      }
      
      // 回车键激活链接
      if (e.key === 'Enter' && target.tagName === 'A') {
        target.click();
      }
      
      // 箭头键导航（用于菜单等）
      if (target.getAttribute('role') === 'menuitem') {
        const menuItems = Array.from(target.closest('[role="menu"]').querySelectorAll('[role="menuitem"]'));
        const currentIndex = menuItems.indexOf(target);
        
        if (e.key === 'ArrowDown') {
          e.preventDefault();
          const nextIndex = (currentIndex + 1) % menuItems.length;
          menuItems[nextIndex].focus();
        } else if (e.key === 'ArrowUp') {
          e.preventDefault();
          const prevIndex = (currentIndex - 1 + menuItems.length) % menuItems.length;
          menuItems[prevIndex].focus();
        }
      }
    });
  }

  // 屏幕阅读器支持
  if (enableScreenReaderSupport) {
    // 动态内容更新通知
    window.announceToScreenReader = function(message, priority = 'polite') {
      const announcer = document.getElementById('screen-reader-announcements');
      if (announcer) {
        announcer.setAttribute('aria-live', priority);
        announcer.textContent = message;
        
        // 清除消息以便下次使用
        setTimeout(() => {
          announcer.textContent = '';
        }, 1000);
      }
    };

    // 页面加载完成通知
    window.addEventListener('load', () => {
      announceToScreenReader('页面加载完成');
    });

    // 路由变化通知（如果使用客户端路由）
    let lastUrl = location.href;
    new MutationObserver(() => {
      const url = location.href;
      if (url !== lastUrl) {
        lastUrl = url;
        announceToScreenReader('页面已更新');
      }
    }).observe(document, { subtree: true, childList: true });
  }

  // 减少动画（尊重用户偏好）
  if (window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
    document.documentElement.style.setProperty('--animation-duration', '0.01ms');
    document.documentElement.style.setProperty('--transition-duration', '0.01ms');
  }

  // 高对比度模式检测
  if (window.matchMedia('(prefers-contrast: high)').matches) {
    document.documentElement.classList.add('high-contrast');
  }

  // 字体大小偏好
  if (window.matchMedia('(prefers-reduced-data: reduce)').matches) {
    // 在数据节省模式下禁用非关键动画和效果
    document.documentElement.classList.add('reduced-data');
  }
</script>

<style>
  /* 跳转链接样式 */
  .skip-links {
    position: absolute;
    top: -40px;
    left: 6px;
    z-index: 1000;
  }

  .skip-link {
    position: absolute;
    top: -40px;
    left: 6px;
    background: #000;
    color: #fff;
    padding: 8px;
    text-decoration: none;
    border-radius: 4px;
    font-size: 14px;
    font-weight: bold;
    z-index: 1001;
    transition: top 0.3s;
  }

  .skip-link:focus {
    top: 6px;
  }

  /* 屏幕阅读器专用内容 */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  /* 键盘导航时显示焦点 */
  .keyboard-navigation *:focus {
    outline: 2px solid #0dbc82 !important;
    outline-offset: 2px !important;
  }

  /* 高对比度模式 */
  .high-contrast {
    filter: contrast(150%);
  }

  /* 数据节省模式 */
  .reduced-data * {
    animation: none !important;
    transition: none !important;
  }

  /* 确保交互元素有足够的点击区域 */
  button, a, input, select, textarea {
    min-height: 44px;
    min-width: 44px;
  }

  /* 改善焦点指示器 */
  :focus-visible {
    outline: 2px solid #0dbc82;
    outline-offset: 2px;
  }
</style>
